server:
  port: 8000

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: gateway-server
  
  config:    
    import: optional:configserver:http://localhost:8888


  app:    
     jwtSecret: mySecretKey123912738aopsgjnspkmndfsopkvajoirjg94gf2opfng2moknm

  main:
    web-application-type: reactive
  
  cloud:   
    gateway:
      default-filters:
       - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:3000'                  
              - 'http://localhost:3001'
            allow-credentials: true 
            allowedHeaders: '*'
            allowedMethods: 
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
            exposedHeaders: '*'
#              - 'ACCESS'
#              - 'Set-Cookie'

      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true

      routes:
        - id:  user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/api/auth/public/login, /user-service/registrationConfirm, /user-service/api/token/**, /user-service/api/admin/**, /user-service/api/search/**, /user-service/api/product/**
            - Method=POST, GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>. *) , /$\{segment}
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/api/token/**, /user-service/api/user/**, /user-service/api/auth/user
            - Method=GET,POST,PUT,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>. *) , /$\{segment}
            - AuthorizationHeaderFilter
            
        - id: catalog-service
          uri: lb://catalog-service
          predicates:
              - Path=/catalog-service/**
          filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/catalog-service/(?<segment>.*), /$\{segment}

        - id: cart-service
          uri: lb://cart-service
          predicates:
              - Path=/cart-service/**
          filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/cart-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter    

        - id: coupon-service
          uri: lb://coupon-service
          predicates:
              - Path=/coupon-service/**
          filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/coupon-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter                
        
        - id: order-service
          uri: lb://order-service
          predicates:
              - Path=/order-service/**
          filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/order-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter                

        - id: pay-service
          uri: lb://pay-service
          predicates:
              - Path=/pay-service/**
          filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/pay-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter                

        - id: chat-service
          uri: lb:ws://chat-service
          predicates:
              - Path=/chat-service/**
          filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/chat-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter

  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: 1234

management:
  endpoint:
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: gateway, refresh, health, beans, http, busrefresh, info, metrics, prometheus

logging:
  level:
    org:
      springframework:
              web: DEBUG

